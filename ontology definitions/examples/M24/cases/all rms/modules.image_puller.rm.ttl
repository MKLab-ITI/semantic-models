# baseURI: https://www.sodalite.eu/ontologies/exchange/rm/
# imports: https://www.sodalite.eu/ontologies/exchange/

@prefix : <https://www.sodalite.eu/ontologies/exchange/rm/> .
@prefix exchange: <https://www.sodalite.eu/ontologies/exchange/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:
  rdf:type owl:Ontology ;
  owl:imports exchange: ;
  owl:versionInfo "Created by the SODALITE IDE" ;
.

:RM_1
  rdf:type exchange:RM ;
  exchange:userId "27827d44-0f6c-11ea-8d71-362b9e155667" ;
.

:Parameter_1
  rdf:type exchange:Parameter ;
  exchange:name "valid_values" ;
  exchange:listValue "library" ;
  exchange:listValue "docker" ;
  exchange:listValue "shub" ;
  exchange:listValue "private" ;
.		
	
:Parameter_2
  rdf:type exchange:Parameter ;
  exchange:name "property" ;  
  exchange:value 'output' ; 
.

:Parameter_3
  rdf:type exchange:Parameter ;
  exchange:name "entity" ;  
  exchange:value 'SELF' ; 
.


:Parameter_4
  rdf:type exchange:Parameter ;
  exchange:name "get_property" ;
  exchange:hasParameter :Parameter_2 ;
  exchange:hasParameter :Parameter_3 ;
.	
:Parameter_5
  rdf:type exchange:Parameter ;
  exchange:name "property" ;  
  exchange:value 'registry' ; 
.

:Parameter_6
  rdf:type exchange:Parameter ;
  exchange:name "entity" ;  
  exchange:value 'SELF' ; 
.


:Parameter_7
  rdf:type exchange:Parameter ;
  exchange:name "get_property" ;
  exchange:hasParameter :Parameter_5 ;
  exchange:hasParameter :Parameter_6 ;
.	
:Parameter_8
  rdf:type exchange:Parameter ;
  exchange:name "property" ;  
  exchange:value 'certs_location' ; 
.

:Parameter_9
  rdf:type exchange:Parameter ;
  exchange:name "entity" ;  
  exchange:value 'SELF' ; 
.


:Parameter_10
  rdf:type exchange:Parameter ;
  exchange:name "get_property" ;
  exchange:hasParameter :Parameter_8 ;
  exchange:hasParameter :Parameter_9 ;
.	
:Parameter_11
  rdf:type exchange:Parameter ;
  exchange:name "property" ;  
  exchange:value 'images_location' ; 
.

:Parameter_12
  rdf:type exchange:Parameter ;
  exchange:name "entity" ;  
  exchange:value 'SELF' ; 
.


:Parameter_13
  rdf:type exchange:Parameter ;
  exchange:name "get_property" ;
  exchange:hasParameter :Parameter_11 ;
  exchange:hasParameter :Parameter_12 ;
.	
:Parameter_14
  rdf:type exchange:Parameter ;
  exchange:name "property" ;  
  exchange:value 'puller_image' ; 
.

:Parameter_15
  rdf:type exchange:Parameter ;
  exchange:name "entity" ;  
  exchange:value 'SELF' ; 
.


:Parameter_16
  rdf:type exchange:Parameter ;
  exchange:name "get_property" ;
  exchange:hasParameter :Parameter_14 ;
  exchange:hasParameter :Parameter_15 ;
.	
:Parameter_17
  rdf:type exchange:Parameter ;
  exchange:name "property" ;  
  exchange:value 'puller_image_remote' ; 
.

:Parameter_18
  rdf:type exchange:Parameter ;
  exchange:name "entity" ;  
  exchange:value 'SELF' ; 
.


:Parameter_19
  rdf:type exchange:Parameter ;
  exchange:name "get_property" ;
  exchange:hasParameter :Parameter_17 ;
  exchange:hasParameter :Parameter_18 ;
.	
:Parameter_20
  rdf:type exchange:Parameter ;
  exchange:name "property" ;  
  exchange:value 'image' ; 
.

:Parameter_21
  rdf:type exchange:Parameter ;
  exchange:name "entity" ;  
  exchange:value 'SELF' ; 
.


:Parameter_22
  rdf:type exchange:Parameter ;
  exchange:name "get_property" ;
  exchange:hasParameter :Parameter_20 ;
  exchange:hasParameter :Parameter_21 ;
.	
:Parameter_23
  rdf:type exchange:Parameter ;
  exchange:name "property" ;  
  exchange:value 'output' ; 
.

:Parameter_24
  rdf:type exchange:Parameter ;
  exchange:name "entity" ;  
  exchange:value 'SELF' ; 
.


:Parameter_25
  rdf:type exchange:Parameter ;
  exchange:name "get_property" ;
  exchange:hasParameter :Parameter_23 ;
  exchange:hasParameter :Parameter_24 ;
.	
:Parameter_26
  rdf:type exchange:Parameter ;
  exchange:name "property" ;  
  exchange:value 'registry' ; 
.

:Parameter_27
  rdf:type exchange:Parameter ;
  exchange:name "entity" ;  
  exchange:value 'SELF' ; 
.


:Parameter_28
  rdf:type exchange:Parameter ;
  exchange:name "get_property" ;
  exchange:hasParameter :Parameter_26 ;
  exchange:hasParameter :Parameter_27 ;
.	
:Parameter_29
  rdf:type exchange:Parameter ;
  exchange:name "property" ;  
  exchange:value 'certs_location' ; 
.

:Parameter_30
  rdf:type exchange:Parameter ;
  exchange:name "entity" ;  
  exchange:value 'SELF' ; 
.


:Parameter_31
  rdf:type exchange:Parameter ;
  exchange:name "get_property" ;
  exchange:hasParameter :Parameter_29 ;
  exchange:hasParameter :Parameter_30 ;
.	
:Parameter_32
  rdf:type exchange:Parameter ;
  exchange:name "property" ;  
  exchange:value 'images_location' ; 
.

:Parameter_33
  rdf:type exchange:Parameter ;
  exchange:name "entity" ;  
  exchange:value 'SELF' ; 
.


:Parameter_34
  rdf:type exchange:Parameter ;
  exchange:name "get_property" ;
  exchange:hasParameter :Parameter_32 ;
  exchange:hasParameter :Parameter_33 ;
.	
:Parameter_35
  rdf:type exchange:Parameter ;
  exchange:name "property" ;  
  exchange:value 'puller_image' ; 
.

:Parameter_36
  rdf:type exchange:Parameter ;
  exchange:name "entity" ;  
  exchange:value 'SELF' ; 
.


:Parameter_37
  rdf:type exchange:Parameter ;
  exchange:name "get_property" ;
  exchange:hasParameter :Parameter_35 ;
  exchange:hasParameter :Parameter_36 ;
.	

:Parameter_38
  rdf:type exchange:Parameter ;
  exchange:name "attribute" ;  
  exchange:value 'public_address' ; 
.

:Parameter_39
  rdf:type exchange:Parameter ;
  exchange:name "entity" ;  
  exchange:value 'SELF' ; 
.

:Parameter_40
  rdf:type exchange:Parameter ;
  exchange:name "req_cap" ;  
  exchange:value 'hpc/sodalite.nodes.hpc.job.torque.configuration.base.host' ; 
.

:Parameter_41
  rdf:type exchange:Parameter ;
  exchange:name "get_attribute" ;
  exchange:hasParameter :Parameter_38 ;
  exchange:hasParameter :Parameter_39 ;
  exchange:hasParameter :Parameter_40 ;
.	
:Parameter_42
  rdf:type exchange:Parameter ;
  exchange:name "attribute" ;  
  exchange:value 'username' ; 
.

:Parameter_43
  rdf:type exchange:Parameter ;
  exchange:name "entity" ;  
  exchange:value 'SELF' ; 
.

:Parameter_44
  rdf:type exchange:Parameter ;
  exchange:name "req_cap" ;  
  exchange:value 'hpc/sodalite.nodes.hpc.job.torque.configuration.base.host' ; 
.

:Parameter_45
  rdf:type exchange:Parameter ;
  exchange:name "get_attribute" ;
  exchange:hasParameter :Parameter_42 ;
  exchange:hasParameter :Parameter_43 ;
  exchange:hasParameter :Parameter_44 ;
.	
:Parameter_46
  rdf:type exchange:Parameter ;
  exchange:name "attribute" ;  
  exchange:value 'ssh-key' ; 
.

:Parameter_47
  rdf:type exchange:Parameter ;
  exchange:name "entity" ;  
  exchange:value 'SELF' ; 
.

:Parameter_48
  rdf:type exchange:Parameter ;
  exchange:name "req_cap" ;  
  exchange:value 'hpc/sodalite.nodes.hpc.job.torque.configuration.base.host' ; 
.

:Parameter_49
  rdf:type exchange:Parameter ;
  exchange:name "get_attribute" ;
  exchange:hasParameter :Parameter_46 ;
  exchange:hasParameter :Parameter_47 ;
  exchange:hasParameter :Parameter_48 ;
.	
:Parameter_50
  rdf:type exchange:Parameter ;
  exchange:name "attribute" ;  
  exchange:value 'public_address' ; 
.

:Parameter_51
  rdf:type exchange:Parameter ;
  exchange:name "entity" ;  
  exchange:value 'SELF' ; 
.

:Parameter_52
  rdf:type exchange:Parameter ;
  exchange:name "req_cap" ;  
  exchange:value 'hpc/sodalite.nodes.hpc.job.torque.configuration.base.host' ; 
.

:Parameter_53
  rdf:type exchange:Parameter ;
  exchange:name "get_attribute" ;
  exchange:hasParameter :Parameter_50 ;
  exchange:hasParameter :Parameter_51 ;
  exchange:hasParameter :Parameter_52 ;
.	
:Parameter_54
  rdf:type exchange:Parameter ;
  exchange:name "attribute" ;  
  exchange:value 'username' ; 
.

:Parameter_55
  rdf:type exchange:Parameter ;
  exchange:name "entity" ;  
  exchange:value 'SELF' ; 
.

:Parameter_56
  rdf:type exchange:Parameter ;
  exchange:name "req_cap" ;  
  exchange:value 'hpc/sodalite.nodes.hpc.job.torque.configuration.base.host' ; 
.

:Parameter_57
  rdf:type exchange:Parameter ;
  exchange:name "get_attribute" ;
  exchange:hasParameter :Parameter_54 ;
  exchange:hasParameter :Parameter_55 ;
  exchange:hasParameter :Parameter_56 ;
.	
:Parameter_58
  rdf:type exchange:Parameter ;
  exchange:name "attribute" ;  
  exchange:value 'ssh-key' ; 
.

:Parameter_59
  rdf:type exchange:Parameter ;
  exchange:name "entity" ;  
  exchange:value 'SELF' ; 
.

:Parameter_60
  rdf:type exchange:Parameter ;
  exchange:name "req_cap" ;  
  exchange:value 'hpc/sodalite.nodes.hpc.job.torque.configuration.base.host' ; 
.

:Parameter_61
  rdf:type exchange:Parameter ;
  exchange:name "get_attribute" ;
  exchange:hasParameter :Parameter_58 ;
  exchange:hasParameter :Parameter_59 ;
  exchange:hasParameter :Parameter_60 ;
.	


:Parameter_62
  rdf:type exchange:Parameter ;
  exchange:name "default" ;  
  exchange:hasParameter :Parameter_41 ; 
.

:Parameter_63
  rdf:type exchange:Parameter ;
  exchange:name "remote_host_public_address" ;
  exchange:hasParameter :Parameter_62 ;
.	

:Parameter_64
  rdf:type exchange:Parameter ;
  exchange:name "default" ;  
  exchange:hasParameter :Parameter_45 ; 
.

:Parameter_65
  rdf:type exchange:Parameter ;
  exchange:name "remote_host_username" ;
  exchange:hasParameter :Parameter_64 ;
.	

:Parameter_66
  rdf:type exchange:Parameter ;
  exchange:name "default" ;  
  exchange:hasParameter :Parameter_49 ; 
.

:Parameter_67
  rdf:type exchange:Parameter ;
  exchange:name "remote_host_keypath" ;
  exchange:hasParameter :Parameter_66 ;
.	

:Parameter_68
  rdf:type exchange:Parameter ;
  exchange:name "default" ;  
  exchange:hasParameter :Parameter_4 ; 
.

:Parameter_69
  rdf:type exchange:Parameter ;
  exchange:name "output" ;
  exchange:hasParameter :Parameter_68 ;
.	

:Parameter_70
  rdf:type exchange:Parameter ;
  exchange:name "default" ;  
  exchange:hasParameter :Parameter_7 ; 
.

:Parameter_71
  rdf:type exchange:Parameter ;
  exchange:name "registry" ;
  exchange:hasParameter :Parameter_70 ;
.	

:Parameter_72
  rdf:type exchange:Parameter ;
  exchange:name "default" ;  
  exchange:hasParameter :Parameter_10 ; 
.

:Parameter_73
  rdf:type exchange:Parameter ;
  exchange:name "certs_location" ;
  exchange:hasParameter :Parameter_72 ;
.	

:Parameter_74
  rdf:type exchange:Parameter ;
  exchange:name "default" ;  
  exchange:hasParameter :Parameter_13 ; 
.

:Parameter_75
  rdf:type exchange:Parameter ;
  exchange:name "images_location" ;
  exchange:hasParameter :Parameter_74 ;
.	

:Parameter_76
  rdf:type exchange:Parameter ;
  exchange:name "default" ;  
  exchange:hasParameter :Parameter_16 ; 
.

:Parameter_77
  rdf:type exchange:Parameter ;
  exchange:name "puller_image" ;
  exchange:hasParameter :Parameter_76 ;
.	

:Parameter_78
  rdf:type exchange:Parameter ;
  exchange:name "default" ;  
  exchange:hasParameter :Parameter_19 ; 
.

:Parameter_79
  rdf:type exchange:Parameter ;
  exchange:name "puller_image_remote" ;
  exchange:hasParameter :Parameter_78 ;
.	

:Parameter_80
  rdf:type exchange:Parameter ;
  exchange:name "default" ;  
  exchange:hasParameter :Parameter_53 ; 
.

:Parameter_81
  rdf:type exchange:Parameter ;
  exchange:name "remote_host_public_address" ;
  exchange:hasParameter :Parameter_80 ;
.	

:Parameter_82
  rdf:type exchange:Parameter ;
  exchange:name "default" ;  
  exchange:hasParameter :Parameter_57 ; 
.

:Parameter_83
  rdf:type exchange:Parameter ;
  exchange:name "remote_host_username" ;
  exchange:hasParameter :Parameter_82 ;
.	

:Parameter_84
  rdf:type exchange:Parameter ;
  exchange:name "default" ;  
  exchange:hasParameter :Parameter_61 ; 
.

:Parameter_85
  rdf:type exchange:Parameter ;
  exchange:name "remote_host_keypath" ;
  exchange:hasParameter :Parameter_84 ;
.	

:Parameter_86
  rdf:type exchange:Parameter ;
  exchange:name "default" ;  
  exchange:hasParameter :Parameter_22 ; 
.

:Parameter_87
  rdf:type exchange:Parameter ;
  exchange:name "image" ;
  exchange:hasParameter :Parameter_86 ;
.	

:Parameter_88
  rdf:type exchange:Parameter ;
  exchange:name "default" ;  
  exchange:hasParameter :Parameter_25 ; 
.

:Parameter_89
  rdf:type exchange:Parameter ;
  exchange:name "output" ;
  exchange:hasParameter :Parameter_88 ;
.	

:Parameter_90
  rdf:type exchange:Parameter ;
  exchange:name "default" ;  
  exchange:hasParameter :Parameter_28 ; 
.

:Parameter_91
  rdf:type exchange:Parameter ;
  exchange:name "registry" ;
  exchange:hasParameter :Parameter_90 ;
.	

:Parameter_92
  rdf:type exchange:Parameter ;
  exchange:name "default" ;  
  exchange:hasParameter :Parameter_31 ; 
.

:Parameter_93
  rdf:type exchange:Parameter ;
  exchange:name "certs_location" ;
  exchange:hasParameter :Parameter_92 ;
.	

:Parameter_94
  rdf:type exchange:Parameter ;
  exchange:name "default" ;  
  exchange:hasParameter :Parameter_34 ; 
.

:Parameter_95
  rdf:type exchange:Parameter ;
  exchange:name "images_location" ;
  exchange:hasParameter :Parameter_94 ;
.	

:Parameter_96
  rdf:type exchange:Parameter ;
  exchange:name "default" ;  
  exchange:hasParameter :Parameter_37 ; 
.

:Parameter_97
  rdf:type exchange:Parameter ;
  exchange:name "puller_image" ;
  exchange:hasParameter :Parameter_96 ;
.	

:Parameter_98
  rdf:type exchange:Parameter ;
  exchange:name "inputs" ;
  exchange:hasParameter :Parameter_63 ;
  exchange:hasParameter :Parameter_65 ;
  exchange:hasParameter :Parameter_67 ;
  exchange:hasParameter :Parameter_69 ;
  exchange:hasParameter :Parameter_71 ;
  exchange:hasParameter :Parameter_73 ;
  exchange:hasParameter :Parameter_75 ;
  exchange:hasParameter :Parameter_77 ;
  exchange:hasParameter :Parameter_79 ;
.

:Parameter_99
  rdf:type exchange:Parameter ;
  exchange:name "path" ;
  exchange:value '/home/yosu/Projects/Sodalite/Git/iac-management/use-cases/modules/hpc/image-puller/playbooks/configure-puller.yml' ;
.

:Parameter_100
  rdf:type exchange:Parameter ;
  exchange:name "content" ;
  exchange:value '---\n- hosts: all\n  gather_facts: no\n  tasks:\n    - name: >\n        Create temporary inventory for remote_host, \n        since opera requires internal envvars to access the target. \n        Need more examples to access static nodes without specifying them in the inventory file\n      add_host:\n        name: "{{ remote_host_public_address }}"\n        groups: "{{ remote_host_public_address }}"\n        ansible_host: "{{ remote_host_public_address }}"\n        ansible_user: "{{ remote_host_username }}"\n        ansible_ssh_private_key_file: "{{ remote_host_keypath }}"\n        ansible_ssh_common_args: >\n          -o IdentitiesOnly=yes\n          -o BatchMode=yes\n          -o UserKnownHostsFile=/dev/null\n          -o StrictHostKeyChecking=no\n      when: remote_host_public_address != "localhost"\n- hosts: "{{ remote_host_public_address }}"\n  gather_facts: yes\n  environment:\n    PATH: "{{ ansible_env.PATH }}:/usr/sbin"\n  tasks:\n    - name: "Create images dir"\n      file:\n        dest: "{{ images_location }}"\n        state: directory\n    - name: "When private repository, configure puller"\n      block:\n        - name: "Check private registry and output"\n          fail:\n            msg: For private registry the output should be specified\n          when: output is not defined\n        - name: "Create certs dir"\n          file:\n            dest: "{{ certs_location }}"\n            state: directory\n        - name: "Register certificates existence"\n          stat:\n            path: "{{ certs_location }}/{{ item }}"\n          register: stat_results\n          with_items:\n            - ca.crt\n            - client.cert\n            - client.key\n        \n        - name: "Check certificates existence"\n          fail:\n            msg: "{{ item.item }}"\n          with_items: "{{ stat_results.results }}"\n          when: item.stat.exists == False\n        - name: "Check puller image existence"\n          stat:\n            path: "{{ puller_image }}"\n          register: image_status\n        - name: "Download puller"\n          shell: singularity pull {{ puller_image }} docker://{{ puller_image_remote }}\n          when: image_status.stat.exists == false\n          \n      when: registry == \'private\'\n' ;
.


:Parameter_101
  rdf:type exchange:Parameter ;
  exchange:name "primary" ;
  exchange:hasParameter :Parameter_99 ;
  exchange:hasParameter :Parameter_100 ;
.


:Parameter_102
  rdf:type exchange:Parameter ;
  exchange:name "implementation" ;
  exchange:hasParameter :Parameter_101 ;
.

:Parameter_103
  rdf:type exchange:Parameter ;
  exchange:name "configure" ;
  exchange:hasParameter :Parameter_98 ;
  exchange:hasParameter :Parameter_102 ;
.
:Parameter_104
  rdf:type exchange:Parameter ;
  exchange:name "inputs" ;
  exchange:hasParameter :Parameter_81 ;
  exchange:hasParameter :Parameter_83 ;
  exchange:hasParameter :Parameter_85 ;
  exchange:hasParameter :Parameter_87 ;
  exchange:hasParameter :Parameter_89 ;
  exchange:hasParameter :Parameter_91 ;
  exchange:hasParameter :Parameter_93 ;
  exchange:hasParameter :Parameter_95 ;
  exchange:hasParameter :Parameter_97 ;
.

:Parameter_105
  rdf:type exchange:Parameter ;
  exchange:name "path" ;
  exchange:value '/home/yosu/Projects/Sodalite/Git/iac-management/use-cases/modules/hpc/image-puller/playbooks/start-puller.yml' ;
.

:Parameter_106
  rdf:type exchange:Parameter ;
  exchange:name "content" ;
  exchange:value '---\n- hosts: all\n  gather_facts: no\n  tasks:\n    - name: >\n        Create temporary inventory for remote_host, \n        since opera requires internal envvars to access the target. \n        Need more examples to access static nodes without specifying them in the inventory file\n      add_host:\n        name: "{{ remote_host_public_address }}"\n        groups: "{{ remote_host_public_address }}"\n        ansible_host: "{{ remote_host_public_address }}"\n        ansible_user: "{{ remote_host_username }}"\n        ansible_ssh_private_key_file: "{{ remote_host_keypath }}"\n        ansible_ssh_common_args: >\n          -o IdentitiesOnly=yes\n          -o BatchMode=yes\n          -o UserKnownHostsFile=/dev/null\n          -o StrictHostKeyChecking=no\n      when: remote_host_public_address != "localhost"\n- hosts: "{{ remote_host_public_address }}"\n  gather_facts: yes\n  environment:\n    PATH: "{{ ansible_env.PATH }}:/usr/sbin"\n  tasks:\n    - set_fact:\n        output_exists: "{{ output is defined and output | length > 0 }}"\n    - name: "Check image existence"\n      stat:\n        path: "{{ images_location }}/{{ output }}"\n      register: image_status\n      when: output_exists\n    - set_fact:\n        image_exists: "{{ output_exists and image_status.stat.exists == true }}"\n    - name: "When private repository, download using puller"\n      block:\n        - name: "Download tar image"\n          shell: >\n            singularity run \\\n              -B {{ certs_location }}:/certs \\\n              -B {{ images_location }}:/images \\\n              {{ puller_image }} {{ output }} {{ image }}\n        - name: "Convert tar to sif"\n          shell: >\n            singularity build \\\n              {{ images_location }}/{{ output }} \\\n              docker-archive://{{ images_location }}/{{ output }}.tar.gz\n      when: image_exists == false and registry == \'private\'\n    - name: "Otherwise, download normally"\n      block:\n        - name: Pulling image\n          shell: >\n            singularity pull \\\n              --dir {{ images_location }} \\\n              {{ output }} \\\n              {{ image_path }}\n          register: pull_status \n          ignore_errors: yes\n          vars:\n            image_path: "{{ image if image is search(\'(docker|library|shub)://\') else registry + \'://\' + image }}"\n        \n        # ignoring only "Image file already exists" error\n        - fail:\n            msg: Error occurred while pulling\n          when: "pull_status.rc != 0 and \'Image file already exists\' not in pull_status.stderr" \n      when: image_exists == false and registry != \'private\'' ;
.


:Parameter_107
  rdf:type exchange:Parameter ;
  exchange:name "primary" ;
  exchange:hasParameter :Parameter_105 ;
  exchange:hasParameter :Parameter_106 ;
.


:Parameter_108
  rdf:type exchange:Parameter ;
  exchange:name "implementation" ;
  exchange:hasParameter :Parameter_107 ;
.

:Parameter_109
  rdf:type exchange:Parameter ;
  exchange:name "start" ;
  exchange:hasParameter :Parameter_104 ;
  exchange:hasParameter :Parameter_108 ;
.

:Parameter_110
  rdf:type exchange:Parameter ;
  exchange:name "type" ;
  exchange:value 'string' ;  
.

:Parameter_111
  rdf:type exchange:Parameter ;
  exchange:name "required" ;
  exchange:value 'false' ;
.

:Parameter_112
  rdf:type exchange:Parameter ;
  exchange:name "default" ;
  exchange:value '' ;
.





:Property_1
  rdf:type exchange:Property ;
  exchange:name "output" ;
  exchange:description 'Output name of SIF file. Must be specified when registry is private' ;
  exchange:hasParameter :Parameter_110 ;
  exchange:hasParameter :Parameter_111 ;
  exchange:hasParameter :Parameter_112 ;
.
:Parameter_113
  rdf:type exchange:Parameter ;
  exchange:name "type" ;
  exchange:value 'string' ;  
.

:Parameter_114
  rdf:type exchange:Parameter ;
  exchange:name "required" ;
  exchange:value 'false' ;
.






:Property_2
  rdf:type exchange:Property ;
  exchange:name "image" ;
  exchange:hasParameter :Parameter_113 ;
  exchange:hasParameter :Parameter_114 ;
.
:Parameter_115
  rdf:type exchange:Parameter ;
  exchange:name "type" ;
  exchange:value 'string' ;  
.

:Parameter_116
  rdf:type exchange:Parameter ;
  exchange:name "required" ;
  exchange:value 'false' ;
.




:Parameter_117
  rdf:type exchange:Parameter ;
  exchange:name "constraints" ;
  exchange:hasParameter :Parameter_1 ;
.


:Property_3
  rdf:type exchange:Property ;
  exchange:name "registry" ;
  exchange:hasParameter :Parameter_115 ;
  exchange:hasParameter :Parameter_116 ;
  exchange:hasParameter :Parameter_117 ;
.
:Parameter_118
  rdf:type exchange:Parameter ;
  exchange:name "type" ;
  exchange:value 'string' ;  
.

:Parameter_119
  rdf:type exchange:Parameter ;
  exchange:name "required" ;
  exchange:value 'false' ;
.

:Parameter_120
  rdf:type exchange:Parameter ;
  exchange:name "default" ;
  exchange:value 'images' ;
.





:Property_4
  rdf:type exchange:Property ;
  exchange:name "images_location" ;
  exchange:hasParameter :Parameter_118 ;
  exchange:hasParameter :Parameter_119 ;
  exchange:hasParameter :Parameter_120 ;
.
:Parameter_121
  rdf:type exchange:Parameter ;
  exchange:name "type" ;
  exchange:value 'string' ;  
.

:Parameter_122
  rdf:type exchange:Parameter ;
  exchange:name "required" ;
  exchange:value 'false' ;
.

:Parameter_123
  rdf:type exchange:Parameter ;
  exchange:name "default" ;
  exchange:value 'certs' ;
.





:Property_5
  rdf:type exchange:Property ;
  exchange:name "certs_location" ;
  exchange:hasParameter :Parameter_121 ;
  exchange:hasParameter :Parameter_122 ;
  exchange:hasParameter :Parameter_123 ;
.
:Parameter_124
  rdf:type exchange:Parameter ;
  exchange:name "type" ;
  exchange:value 'string' ;  
.

:Parameter_125
  rdf:type exchange:Parameter ;
  exchange:name "required" ;
  exchange:value 'false' ;
.

:Parameter_126
  rdf:type exchange:Parameter ;
  exchange:name "default" ;
  exchange:value 'puller.sif' ;
.





:Property_6
  rdf:type exchange:Property ;
  exchange:name "puller_image" ;
  exchange:hasParameter :Parameter_124 ;
  exchange:hasParameter :Parameter_125 ;
  exchange:hasParameter :Parameter_126 ;
.
:Parameter_127
  rdf:type exchange:Parameter ;
  exchange:name "type" ;
  exchange:value 'string' ;  
.

:Parameter_128
  rdf:type exchange:Parameter ;
  exchange:name "required" ;
  exchange:value 'false' ;
.

:Parameter_129
  rdf:type exchange:Parameter ;
  exchange:name "default" ;
  exchange:value 'modakopt/modak:puller' ;
.





:Property_7
  rdf:type exchange:Property ;
  exchange:name "puller_image_remote" ;
  exchange:hasParameter :Parameter_127 ;
  exchange:hasParameter :Parameter_128 ;
  exchange:hasParameter :Parameter_129 ;
.


:Parameter_130
  rdf:type exchange:Parameter ;
  exchange:name "type" ;
  exchange:value 'tosca.interfaces.node.lifecycle.Standard' ;
.

:Parameter_131
  rdf:type exchange:Parameter ;
  exchange:name "operations" ;
  exchange:hasParameter :Parameter_103 ;
  exchange:hasParameter :Parameter_109 ;
.

:Interface_1
  rdf:type exchange:Interface ;
  exchange:name "Standard" ;
  exchange:hasParameter :Parameter_130 ;
  exchange:hasParameter :Parameter_131 ;
.


:Parameter_132
  rdf:type exchange:Parameter ;
  exchange:name "capability" ;
  exchange:value 'tosca.capabilities.Compute' ;  
.

:Parameter_133
  rdf:type exchange:Parameter ;
  exchange:name "node" ;
  exchange:value 'tosca.nodes.Compute' ;  
.

:Parameter_134
  rdf:type exchange:Parameter ;
  exchange:name "relationship" ;	  
  exchange:value 'tosca.relationships.HostedOn' ;  
.

:Requirement_1
  rdf:type exchange:Requirement ;
  exchange:name "host" ;
  exchange:hasParameter :Parameter_132 ;
  exchange:hasParameter :Parameter_133 ;
  exchange:hasParameter :Parameter_134 ;
.		

:NodeType_1
  rdf:type exchange:Type ;
  exchange:name "sodalite.image_puller.singularity" ;
  exchange:derivesFrom 'tosca.nodes.Root' ;  
  exchange:properties :Property_1 ; 
  exchange:properties :Property_2 ; 
  exchange:properties :Property_3 ; 
  exchange:properties :Property_4 ; 
  exchange:properties :Property_5 ; 
  exchange:properties :Property_6 ; 
  exchange:properties :Property_7 ; 
  exchange:requirements :Requirement_1 ; 
  exchange:interfaces :Interface_1 ; 
.  



